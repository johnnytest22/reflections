When would you want to use a remote repository rather than keeping all your work local?

You would want to use a remote repository for multiple reasons. The main reason is if all your work is collaborative and you won't be the only person contributing. Another reason is if you'd prefer to store your work on the cloud and not have to worry about local storage.

Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?

By pulling changes manually, you're able to verify that the changes being won't break the code that you've completed. You get the chance to fix any conflicts that may have appeared from various people contributing to a project. Similarly, it can also help you familiarize yourself with the specific changes that other contributors may have made.

Describe the differences between forks, clones, and branches. When would you use one instead of another?

Forks copy remote repositories onto your own remote repository on github. Clones copy remote repositories onto your local directory or local to local. Branches create an instance of your local repository off the most recent commit.

What is the benefit of having a copy of the last known state of the remote stored locally?

The benefit of having the last known state of the remote stored locally is that it helps you during merge conflicts when two different contributors provide their changes since you have the reference point of what the last known state was both locally and remotely.

How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?

I would have multiple contributors work collaboratively on projects. Not only could I use github to experiment with different branches and versions of my project, but I could also maintain code quality by routinely having my colleagues code review my work.